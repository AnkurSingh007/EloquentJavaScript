function arrayToList(array){
  let head = {};
  let next = head;
  for(let ele of array){
    next['value'] = ele;
    next['rest'] = {};
    next = next['rest'];
  }
  next['rest'] = null;
  return head;
}

function listToArray(list){
  let arr = [];
  while(list !== null){
    arr.push(list['value']);
    list = list['rest'];
  }
  return arr;
}

function prepend(ele, list){
  let head = {value: ele, rest: list};
  return head;
}

function nth(list, n){
  for(let i = 0; i < n && list !== null; i++){
    list = list['rest'];
  }
  if(list !== null)
    return list['value'];
  else
    return undefined;
}

function nth_recursive(list, n){
  if(list === null)
    return undefined;
  else if(n == 0)
    return list['value'];
  else
    return nth_recursive(list['rest'], n - 1);
}


console.log(arrayToList([1, 2, 3]));
console.log(listToArray({'value': 1, rest: {value: -2, rest: null}}));
let list = {value: 1, rest: {value: -1, rest: null}};
console.log(prepend(-4, list));
console.log(nth(list, 1));
// -1
console.log(nth_recursive(list, 1));
// -1
